name: Continuous Integration

on:
  push:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install X11 dependencies
        run: sudo apt-get install libxcb-shape0-dev libxcb-xfixes0-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0
            -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads"
      - id: coverage
        uses: actions-rs/grcov@v0.1
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ${{ steps.coverage.outputs.report }}

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: docker build -t kmon .
      - name: Tag
        run: |
         docker tag kmon ${{ secrets.DOCKER_USERNAME }}/kmon:latest
         docker tag kmon docker.pkg.github.com/${{ secrets.GITHUB_USERNAME }}/kmon/kmon:latest
      - name: Login (Docker Hub)
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push (Docker Hub)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/kmon:latest
      - name: Login (Package Registry)
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ secrets.GITHUB_USERNAME }} docker.pkg.github.com --password-stdin
      - name: Push (Package Registry)
        run: docker push docker.pkg.github.com/${{ secrets.GITHUB_USERNAME }}/kmon/kmon:latest