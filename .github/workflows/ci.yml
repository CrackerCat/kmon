name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install X11 dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libxcb-shape0-dev libxcb-xfixes0-dev
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '-v'
      - name: Upload reports to codecov.io
        uses: codecov/codecov-action@v1.0.5
        with:
          token: ${{secrets.CODECOV_TOKEN}}
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -A clippy::tabs-in-doc-comments -D warnings

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build
        run: docker build -t ${{ secrets.IMAGE_NAME }} .
      - name: Tag
        run: |
         docker tag ${{ secrets.IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
         docker tag ${{ secrets.IMAGE_NAME }} docker.pkg.github.com/${{ secrets.GITHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}/${{ secrets.IMAGE_NAME }}:latest
      - name: Login (Docker Hub)
        run: echo ${{ secrets.DOCKER_PASSWORD }} |
          docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push (Docker Hub)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:latest
      - name: Login (Package Registry)
        run: echo ${{ secrets.GITHUB_TOKEN }} |
          docker login -u ${{ secrets.GITHUB_USERNAME }} docker.pkg.github.com --password-stdin
      - name: Push (Package Registry)
        run: docker push docker.pkg.github.com/${{ secrets.GITHUB_USERNAME }}/${{ secrets.IMAGE_NAME }}/${{ secrets.IMAGE_NAME }}:latest